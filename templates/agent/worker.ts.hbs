import { Worker, NativeConnection } from '@temporalio/worker';
import * as activities from './activities';
import { registerAgent, updateHeartbeat } from './agentRegistry';

const agentId = '{{agentId}}';

async function run() {
  const temporalAddress = process.env.TEMPORAL_ADDRESS || 'localhost:7233';

  await registerAgent({
    agentId,
    taskQueue: agentId,
    activities: ['{{activityName}}'],
    metadata: {{{json metadata}}}
  });

  setInterval(() => {
    updateHeartbeat(agentId).catch(console.error);
  }, 30_000);

  const connection = await NativeConnection.connect({ address: temporalAddress });

  const worker = await Worker.create({
    connection,
    activities,
    taskQueue: agentId
  });

  console.log(`👷 Worker for agent "${agentId}" is running at ${temporalAddress}`);
  await worker.run();
}

run().catch((err) => {
  console.error(`❌ Worker for agent "${agentId}" failed:`, err);
  process.exit(1);
});
